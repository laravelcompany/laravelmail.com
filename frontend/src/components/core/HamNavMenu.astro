---
import SideNavMenu from "@/components/docs/SideNavMenu.astro";

import { Button } from "@/components/ui/button";
import { Separator } from "@/components/ui/separator";
import { ScrollArea } from "@/components/ui/scroll-area";

import { MenuIcon, X } from "lucide-react";

import { menu } from "@/lib/utils";

import { menu_items, docconfig } from "@/config";

const pathname: string = new URL(Astro.request.url).pathname;
const pathname_part: string = pathname.split("/")[1];
---

<style>
  .menu-overlay {
    display: none;
  }

  .menu-overlay.active {
    display: block;
  }
</style>

<div onclick="toggleMenu()">
  <Button variant={"ghost"} size="icon" client:load>
    <MenuIcon className="h-[1.2rem] w-[1.2rem]" />
  </Button>
</div>

<div
  class="menu-overlay z-[100] w-screen h-screen absolute top-0 left-0 px-6 py-4 bg-background flex flex-col"
>
  <div onclick="closeMenu()" class="flex justify-end">
    <Button variant={"ghost"} size="icon" client:load>
      <X className="h-[1.2rem] w-[1.2rem]" />
    </Button>
  </div>
  <ScrollArea className=" w-full h-dynamic_hscreen mb-4" client:only="react">
    <div class="mt-6 flex flex-col items-start px-6">
      {
        menu_items.map((item) => (
          <a href={item.href}>
            <Button
              variant="link"
              className=`${"/" + pathname_part === "/" + item.href.split("/")[1] ? "underline" : ""} text-foreground`
              key={item.href}
            >
              {item.title}
            </Button>
          </a>
        ))
      }
      {
        !docconfig.hide_side_navigations && (
          <div class="py-4 w-full">
            <Separator />
              <SideNavMenu items={menu} level={0} class="px-4 " />
          </div>
        )
      }
    </div>
  </ScrollArea>
</div>

<script is:inline>
  function toggleMenu() {
    const menuOverlay = document.querySelector(".menu-overlay");
    if (menuOverlay) {
      menuOverlay.classList.toggle("active");
    }
  }

  function closeMenu() {
    const menuOverlay = document.querySelector(".menu-overlay");
    if (menuOverlay) {
      menuOverlay.classList.remove("active");
    }
  }
</script>
